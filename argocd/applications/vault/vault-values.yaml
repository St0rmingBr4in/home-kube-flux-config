---
server:
  resources:
    requests:
      memory: 150Mi
      cpu: 100m
    limits:
      memory: 150Mi

  # Override default environment variables for HTTP ingress
  extraEnvironmentVars:
    # Override VAULT_ADDR to use HTTP for ingress
    VAULT_ADDR: "http://vault.prod-infra.svc.cluster.local:8200"

  # Standalone mode with HTTP for ingress and TLS for internal
  standalone:
    enabled: true
    config: |
      # HTTP listener for ingress (port 8200)
      listener "tcp" {
        address         = "[::]:8200"
        # No TLS - Traefik handles TLS termination
      }

      # TLS listener for internal cluster communication (port 8201)
      listener "tcp" {
        address         = "[::]:8201"
        tls_cert_file   = "/vault/userconfig/vault-internal-tls-cert/tls.crt"
        tls_key_file    = "/vault/userconfig/vault-internal-tls-cert/tls.key"
        tls_min_version = "tls12"
      }

      storage "file" {
        path = "/vault/data"
      }

      disable_mlock = true
      api_addr = "http://vault.prod-infra.svc.cluster.local:8200"
      cluster_addr = "https://vault.prod-infra.svc.cluster.local:8201"

  # Mount TLS certificate
  volumes:
    - name: vault-internal-tls-cert
      secret:
        secretName: vault-internal-tls-cert

  volumeMounts:
    - mountPath: /vault/userconfig/vault-internal-tls-cert
      name: vault-internal-tls-cert
      readOnly: true

  # External ingress (optional)
  ingress:
    enabled: true
    hosts:
      - host: vault.st0rmingbr4in.com
        paths: ["/"]
    tls:
      - secretName: st0rmingbr4in.com-cert
        hosts:
          - vault.st0rmingbr4in.com
    annotations:
      # Backend HTTP configuration - Traefik handles TLS termination
      traefik.ingress.kubernetes.io/service.serversscheme: http

ui:
  enabled: true

injector:
  enabled: false
