---
# Gatekeeper Mutation: Add memory limits and requests to pods that don't have any
# Case: Pod has no memory resources â†’ Set both limit and request to 512Mi (Guaranteed QoS)
apiVersion: mutations.gatekeeper.sh/v1beta1
kind: Assign
metadata:
  name: add-memory-limits
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiVersion: v1
        kind: Pod
  location: "spec.containers[name:*].resources.limits.memory"
  parameters:
    pathTests:
      # Only add memory limit if it doesn't exist
      - subPath: "spec.containers[name:*].resources.limits.memory"
        condition: MustNotExist
    assign:
      value: "512Mi"
---
# Also add matching memory requests when adding limits (regular containers)
apiVersion: mutations.gatekeeper.sh/v1beta1
kind: Assign
metadata:
  name: add-memory-requests
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiVersion: v1
        kind: Pod
  location: "spec.containers[name:*].resources.requests.memory"
  parameters:
    pathTests:
      # Only add memory request if it doesn't exist
      - subPath: "spec.containers[name:*].resources.requests.memory"
        condition: MustNotExist
      # Only add if we're also adding the limit (same conditions)
      - subPath: "spec.containers[name:*].resources.limits.memory"
        condition: MustNotExist
    assign:
      value: "512Mi"
---
# Also handle init containers for adding memory limits
apiVersion: mutations.gatekeeper.sh/v1beta1
kind: Assign
metadata:
  name: add-memory-limits-init
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiVersion: v1
        kind: Pod
  location: "spec.initContainers[name:*].resources.limits.memory"
  parameters:
    pathTests:
      # Only add memory limit if it doesn't exist
      - subPath: "spec.initContainers[name:*].resources.limits.memory"
        condition: MustNotExist
    assign:
      value: "512Mi"
---
# Also add matching memory requests when adding limits (init containers)
apiVersion: mutations.gatekeeper.sh/v1beta1
kind: Assign
metadata:
  name: add-memory-requests-init
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["v1"]
  match:
    scope: Namespaced
    kinds:
      - apiVersion: v1
        kind: Pod
  location: "spec.initContainers[name:*].resources.requests.memory"
  parameters:
    pathTests:
      # Only add memory request if it doesn't exist
      - subPath: "spec.initContainers[name:*].resources.requests.memory"
        condition: MustNotExist
      # Only add if we're also adding the limit (same conditions)
      - subPath: "spec.initContainers[name:*].resources.limits.memory"
        condition: MustNotExist
    assign:
      value: "512Mi"
