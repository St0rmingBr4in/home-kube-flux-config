---
datadog:
  # Cluster configuration
  clusterName: home-lab
  site: datadoghq.eu

  # API key from existing secret
  apiKeyExistingSecret: datadog-api-key

  # Cluster checks and monitoring
  clusterChecks:
    enabled: true
  leaderElection: true
  collectEvents: true

  # Custom integrations for k3s cluster
  confd:
    systemd.yaml: |-
      init_config:

      instances:
        - unit_names:
            - k3s.service
            - k3s-node.service
            - sshd.service
          private_socket: /host/run/systemd/private
    journald.yaml: |-
      init_config:
      logs:
        - type: journald
          path: /host/run/log/journal
          include_units:
            - k3s.service
            - k3s-node.service
            - sshd.service
    etcd.yaml: |-
      init_config:

      instances:
        - prometheus_url: "http://%%env_DD_KUBERNETES_KUBELET_HOST%%:2381/metrics"

    fluxcd.yaml: |-
      init_config:
      instances:
        - metric_patterns:
            include:
              - "*"

  # Container runtime configuration
  criSocketPath: /run/k3s/containerd/containerd.sock

  # Logging configuration
  logs:
    enabled: true
    containerCollectAll: true

  # Process monitoring
  processAgent:
    enabled: true
    processCollection: true
    processDiscovery: true

  # System probe for network and security monitoring
  systemProbe:
    bpfDebug: true
    enableTCPQueueLength: true
    enableOOMKill: true
    enableRuntimeCompiler: true
    enableKernelHeaderDownload: true

  # Monitoring capabilities
  helmCheck:
    enabled: true
    collectEvents: true
  networkMonitoring:
    enabled: true
  serviceMonitoring:
    enabled: true

  # Security monitoring
  securityAgent:
    enabled: true
    runtime:
      enabled: true
      fimEnabled: true
    network:
      enabled: true

  # Prometheus integration
  prometheusScrape:
    enabled: true
    serviceEndpoints: true

  # APM tracing
  apm:
    enabled: true

  # Kubernetes State Metrics
  kubeStateMetricsCore:
    collectVpaMetrics: true

# RBAC configuration
rbac:
  create: true

# Pod labels as tags
podLabelsAsTags:
  app: kube_app
  release: helm_release

# Agent configuration
agents:
  # Use default official Datadog images

  # Container resource configuration (memory request = limit, CPU request only)
  containers:
    agent:
      resources:
        limits:
          memory: 1.2Gi # Based on actual usage (~903Mi) with some headroom
        requests:
          cpu: 200m
          memory: 1Gi # Request slightly less than limit
    processAgent:
      resources:
        limits:
          memory: 300Mi # Reduced from 500Mi - actual usage is much lower
        requests:
          cpu: 100m
          memory: 200Mi # Request less than limit
    traceAgent:
      resources:
        limits:
          memory: 200Mi # Reduced from 256Mi - actual usage is lower
        requests:
          cpu: 50m
          memory: 150Mi # Request less than limit
    systemProbe:
      resources:
        limits:
          memory: 1Gi # Reduced from 1Gi - actual usage is much lower
        requests:
          cpu: 100m
          memory: 1Gi # Request less than limit
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        privileged: true
    securityAgent:
      resources:
        limits:
          memory: 256Mi # Increased from 150Mi for runtime security monitoring
        requests:
          cpu: 50m
          memory: 256Mi # Same as limit for guaranteed QoS
    initContainers:
      resources:
        limits:
          memory: 150Mi
        requests:
          cpu: 50m
          memory: 150Mi

  # Node tolerations for scheduling
  tolerations:
    - effect: NoSchedule
      key: ram
      operator: Exists

  # Custom volumes for k3s monitoring
  volumes:
    - hostPath:
        path: /run/log
      name: logdir
    - hostPath:
        path: /run/systemd
      name: systemddir

  volumeMounts:
    - name: logdir
      mountPath: /host/run/log
    - name: systemddir
      mountPath: /host/run/systemd

# Cluster Agent configuration
clusterAgent:
  enabled: true
  tokenExistingSecret: datadog-cluster-agent
  resources:
    limits:
      memory: 150Mi # Based on actual usage (~112Mi) with some headroom
    requests:
      cpu: 50m
      memory: 150Mi # Request less than limit
  tolerations:
    - effect: NoSchedule
      key: ram
      operator: Exists

# Kube State Metrics configuration
kube-state-metrics:
  resources:
    limits:
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 100Mi
