apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
- https://github.com/fluxcd/flux2//manifests/install/?ref=v2.2.3
- gotk-sync.yaml
- ../common/
namespace: flux-system

patchesStrategicMerge:
- set-resources.yaml
# Add Datadog unified service tags to all Flux components
- |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: helm-controller
      namespace: flux-system
      labels:
        tags.datadoghq.com/source: "helm-controller"
        tags.datadoghq.com/service: "helm-controller"
    spec:
      template:
        metadata:
          labels:
            tags.datadoghq.com/source: "helm-controller"
            tags.datadoghq.com/service: "helm-controller"
- |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: image-automation-controller
      namespace: flux-system
      labels:
        tags.datadoghq.com/source: "image-automation-controller"
        tags.datadoghq.com/service: "image-automation-controller"
    spec:
      template:
        metadata:
          labels:
            tags.datadoghq.com/source: "image-automation-controller"
            tags.datadoghq.com/service: "image-automation-controller"
- |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: image-reflector-controller
      namespace: flux-system
      labels:
        tags.datadoghq.com/source: "image-reflector-controller"
        tags.datadoghq.com/service: "image-reflector-controller"
    spec:
      template:
        metadata:
          labels:
            tags.datadoghq.com/source: "image-reflector-controller"
            tags.datadoghq.com/service: "image-reflector-controller"
- |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: image-reflector-controller
      namespace: flux-system
      labels:
        tags.datadoghq.com/source: "image-reflector-controller"
        tags.datadoghq.com/service: "image-reflector-controller"
    spec:
      template:
        metadata:
          labels:
            tags.datadoghq.com/source: "image-reflector-controller"
            tags.datadoghq.com/service: "image-reflector-controller"
- |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: kustomize-controller
      namespace: flux-system
      labels:
        tags.datadoghq.com/source: "kustomize-controller"
        tags.datadoghq.com/service: "kustomize-controller"
    spec:
      template:
        metadata:
          labels:
            tags.datadoghq.com/source: "kustomize-controller"
            tags.datadoghq.com/service: "kustomize-controller"
- |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: notification-controller
      namespace: flux-system
      labels:
        tags.datadoghq.com/source: "notification-controller"
        tags.datadoghq.com/service: "notification-controller"
    spec:
      template:
        metadata:
          labels:
            tags.datadoghq.com/source: "notification-controller"
            tags.datadoghq.com/service: "notification-controller"
- |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: source-controller
      namespace: flux-system
      labels:
        tags.datadoghq.com/source: "source-controller"
        tags.datadoghq.com/service: "source-controller"
    spec:
      template:
        metadata:
          labels:
            tags.datadoghq.com/source: "source-controller"
            tags.datadoghq.com/service: "source-controller"

patches:
# Annotate Flux components for Datadog
- patch: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: flux-component
    spec:
      template:
        metadata:
          annotations:
            prometheus.io/scrape: "false"
            ad.datadoghq.com/manager.checks: |
              {
                "fluxcd": {
                  "instances": [ {
                     "openmetrics_endpoint": "http://%%host%%:8080/metrics"
                  } ]
                }
              }
  target:
    kind: Deployment
    labelSelector: app.kubernetes.io/part-of=flux
