apiVersion: v1
kind: Secret
metadata:
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
  name: home-assistant-cnpg-main-urls
  namespace: prod-iot
stringData:
  host: home-assistant-cnpg-main-rw
  jdbc: jdbc:postgresql://home-assistant-cnpg-main-rw:5432/home-assistant
  nossl: postgresql://home-assistant:SzlQtR500FD92oooFZcCNZfHkYoDGa320bRc1YjkcEUB6LIejgN5rHZZEfcWXE@home-assistant-cnpg-main-rw:5432/home-assistant?sslmode=disable
  porthost: home-assistant-cnpg-main-rw:5432
  std: postgresql://home-assistant:SzlQtR500FD92oooFZcCNZfHkYoDGa320bRc1YjkcEUB6LIejgN5rHZZEfcWXE@home-assistant-cnpg-main-rw:5432/home-assistant
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
  name: home-assistant-cnpg-main-user
  namespace: prod-iot
stringData:
  password: SzlQtR500FD92oooFZcCNZfHkYoDGa320bRc1YjkcEUB6LIejgN5rHZZEfcWXE
  username: home-assistant
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
  name: home-assistant-init
  namespace: prod-iot
data:
  configuration.yaml.default: |-
    # Configure a default setup of Home Assistant (frontend, api, etc)
    default_config:

    # Text to speech
    tts:
      - platform: google_translate

    group: !include groups.yaml
    automation: !include automations.yaml
    script: !include scripts.yaml
    scene: !include scenes.yaml
  http.default: |-
    http:
      use_x_forwarded_for: true
      trusted_proxies:
  init.sh: |-
    #!/bin/sh
    config_file="/config/configuration.yaml"
    if test -f "$config_file"; then
      echo "configuration.yaml exists."
      if grep -q recorder: "$config_file"; then
        echo "configuration.yaml already contains recorder"
      else
        echo "" >> "$config_file"
        cat /config/init/recorder.default >> "$config_file"
      fi
      if grep -q http: "$config_file"; then
        echo "configuration.yaml already contains http section"
      else
        echo "" >> "$config_file"
        cat /config/init/http.default >> "$config_file"
      fi
    else
      echo "configuration.yaml does NOT exist."
      cp /config/init/configuration.yaml.default "$config_file"
      echo "" >> "$config_file"
      cat /config/init/recorder.default >> "$config_file"
      echo "" >> "$config_file"
      cat /config/init/http.default >> "$config_file"
      echo "" >> "$config_file"
    fi

    echo "Creating include files..."
    for include_file in groups.yaml automations.yaml scripts.yaml scenes.yaml; do
      if test -f "/config/$include_file"; then
        echo "$include_file exists."
      else
        echo "$include_file does NOT exist."
        touch "/config/$include_file"
      fi
    done

    cd "/config" || echo "Could not change path to /config"
    echo "Creating custom_components directory..."
    mkdir "/config/custom_components" || echo "custom_components directory already exists"

    echo "Changing to the custom_components directory..."
    cd "/config/custom_components" || echo "Could not change path to /config/custom_components"

    echo "Downloading HACS"
    wget "https://github.com/hacs/integration/releases/latest/download/hacs.zip" || exit 0

    if [ -d "/config/custom_components/hacs" ]; then
      echo "HACS directory already exist, cleaning up..."
      rm -R "/config/custom_components/hacs"
    fi

    echo "Creating HACS directory..."
    mkdir "/config/custom_components/hacs"

    echo "Unpacking HACS..."
    unzip "/config/custom_components/hacs.zip" -d "/config/custom_components/hacs" >/dev/null 2>&1

    echo "Removing HACS zip file..."
    rm "/config/custom_components/hacs.zip"
    echo "Installation complete."
  recorder.default: |-
    recorder:
      purge_keep_days: 30
      commit_interval: 3
      db_url: "postgresql://home-assistant:SzlQtR500FD92oooFZcCNZfHkYoDGa320bRc1YjkcEUB6LIejgN5rHZZEfcWXE@home-assistant-cnpg-main-rw:5432/home-assistant?client_encoding=utf8"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
    service.name: main
  name: home-assistant
  namespace: prod-iot
spec:
  ports:
    - name: main
      port: 8123
      protocol: TCP
      targetPort: 8123
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/name: home-assistant
    pod.name: main
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
  name: home-assistant
  namespace: prod-iot
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: home-assistant
      app.kubernetes.io/name: home-assistant
      pod.name: main
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        app: home-assistant-20.0.10
        app.kubernetes.io/instance: home-assistant
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: home-assistant
        app.kubernetes.io/version: 2023.10.1
        helm-revision: "1"
        helm.sh/chart: home-assistant-20.0.10
        pod.name: main
        release: home-assistant
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: UTC
            - name: UMASK
              value: "0022"
            - name: UMASK_SET
              value: "0022"
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
          image: tccr.io/truecharts/home-assistant:v2023.10.1@sha256:6b961048427e973e7bca4e9ff4e1ed3b269f1432aa0d43735cdc4a406201124a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8123
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: home-assistant
          ports:
            - containerPort: 8123
              name: main
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8123
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 2
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CAP_NET_RAW
                - CAP_NET_BIND_SERVICE
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 60
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8123
            timeoutSeconds: 2
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: false
            - mountPath: /dev/shm
              name: devshm
              readOnly: false
            - mountPath: /shared
              name: shared
              readOnly: false
            - mountPath: /tmp
              name: tmp
              readOnly: false
            - mountPath: /var/logs
              name: varlogs
              readOnly: false
            - mountPath: /var/run
              name: varrun
              readOnly: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostNetwork: false
      hostPID: false
      initContainers:
        - command:
            - /bin/sh
            - -c
            - |-
              /bin/sh <<'EOF'


              echo "Executing DB waits..."


              echo "Detected RW pooler, testing RW pooler availability..."
              until
                echo "Testing database on url:  home-assistant-cnpg-main-rw"
                pg_isready -U home-assistant -d home-assistant -h home-assistant-cnpg-main-rw
                do sleep 5
              done



              sleep 5
              EOF
          env:
            - name: TZ
              value: UTC
            - name: UMASK
              value: "0022"
            - name: UMASK_SET
              value: "0022"
            - name: S6_READ_ONLY_ROOT
              value: "1"
          image: tccr.io/truecharts/db-wait-postgres:1.1.0@sha256:a163c7836d7bb436a428f5d55bbba0eb73bcdb9bc202047e2523bbb539c113e6
          imagePullPolicy: IfNotPresent
          name: home-assistant-system-cnpg-wait
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add: []
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 568
            runAsNonRoot: true
            runAsUser: 568
            seccompProfile:
              type: RuntimeDefault
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: false
            - mountPath: /dev/shm
              name: devshm
              readOnly: false
            - mountPath: /shared
              name: shared
              readOnly: false
            - mountPath: /tmp
              name: tmp
              readOnly: false
            - mountPath: /var/logs
              name: varlogs
              readOnly: false
            - mountPath: /var/run
              name: varrun
              readOnly: false
        - command:
            - /config/init/init.sh
          env:
            - name: TZ
              value: UTC
            - name: UMASK
              value: "0022"
            - name: UMASK_SET
              value: "0022"
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
          image: tccr.io/truecharts/home-assistant:v2023.10.1@sha256:6b961048427e973e7bca4e9ff4e1ed3b269f1432aa0d43735cdc4a406201124a
          imagePullPolicy: IfNotPresent
          name: home-assistant-init-init
          resources:
            limits:
              cpu: 4000m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CAP_NET_RAW
                - CAP_NET_BIND_SERVICE
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: false
            - mountPath: /dev/shm
              name: devshm
              readOnly: false
            - mountPath: /config/init
              name: init
              readOnly: true
            - mountPath: /shared
              name: shared
              readOnly: false
            - mountPath: /tmp
              name: tmp
              readOnly: false
            - mountPath: /var/logs
              name: varlogs
              readOnly: false
            - mountPath: /var/run
              name: varrun
              readOnly: false
      restartPolicy: Always
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      serviceAccountName: default
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: home-assistant
        - emptyDir:
            medium: Memory
          name: devshm
        - configMap:
            defaultMode: 511
            name: home-assistant-init
            optional: false
          name: init
        - emptyDir: {}
          name: shared
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: varlogs
        - emptyDir:
            medium: Memory
          name: varrun
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: tc-system-chain-basic@kubernetescrd
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
  name: home-assistant
  namespace: prod-iot
spec:
  rules:
    - host: home-assistant.st0rmingbr4in.com
      http:
        paths:
          - backend:
              service:
                name: home-assistant
                port:
                  number: 8123
            path: /
            pathType: Prefix
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  annotations:
    cnpg.io/hibernation: "off"
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    cnpg.io/reload: "on"
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
  name: home-assistant-cnpg-main
  namespace: prod-iot
spec:
  bootstrap:
    initdb:
      database: home-assistant
      owner: home-assistant
      secret:
        name: home-assistant-cnpg-main-user
  instances: 2
  monitoring:
    enablePodMonitor: true
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  postgresql: {}
  primaryUpdateStrategy: unsupervised
  resources:
    limits:
      cpu: 4000m
      memory: 300Mi
    requests:
      cpu: 200m
      memory: 300Mi
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 256Gi
  walStorage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 256Gi
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    app: home-assistant-20.0.10
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/version: 2023.10.1
    helm-revision: "1"
    helm.sh/chart: home-assistant-20.0.10
    release: home-assistant
  name: home-assistant
  namespace: prod-iot
spec:
  jobLabel: app.kubernetes.io/name
  podMetricsEndpoints:
    - port: metrics
  selector:
    matchLabels:
      cnpg.io/poolerName: home-assistant-cnpg-main-rw
---
apiVersion: postgresql.cnpg.io/v1
kind: Pooler
metadata:
  name: home-assistant-cnpg-main-rw
  namespace: prod-iot
spec:
  cluster:
    name: home-assistant-cnpg-main
  instances: 2
  pgbouncer:
    parameters:
      default_pool_size: "10"
      max_client_conn: "1000"
    poolMode: session
  type: rw
