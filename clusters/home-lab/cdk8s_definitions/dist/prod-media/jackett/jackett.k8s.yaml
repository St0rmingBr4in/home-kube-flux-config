apiVersion: v1
kind: Service
metadata:
  labels:
    app: jackett-18.1.6
    app.kubernetes.io/instance: jackett
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jackett
    app.kubernetes.io/version: 0.21.1155
    helm-revision: "1"
    helm.sh/chart: jackett-18.1.6
    release: jackett
    service.name: main
  name: jackett
  namespace: prod-media
spec:
  ports:
    - name: main
      port: 9117
      protocol: TCP
      targetPort: 9117
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/instance: jackett
    app.kubernetes.io/name: jackett
    pod.name: main
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jackett-18.1.6
    app.kubernetes.io/instance: jackett
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jackett
    app.kubernetes.io/version: 0.21.1155
    helm-revision: "1"
    helm.sh/chart: jackett-18.1.6
    release: jackett
  name: jackett
  namespace: prod-media
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: jackett
      app.kubernetes.io/name: jackett
      pod.name: main
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        app: jackett-18.1.6
        app.kubernetes.io/instance: jackett
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: jackett
        app.kubernetes.io/version: 0.21.1155
        helm-revision: "1"
        helm.sh/chart: jackett-18.1.6
        pod.lifecycle: permanent
        pod.name: main
        release: jackett
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: UTC
            - name: UMASK
              value: "0022"
            - name: UMASK_SET
              value: "0022"
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
          image: ghcr.io/linuxserver/jackett:v0.20.2297
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /UI/Login
              port: 9117
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: jackett
          ports:
            - containerPort: 9117
              name: main
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /UI/Login
              port: 9117
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 2
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 500Mi
            requests:
              cpu: 1000m
              memory: 500Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 60
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 9117
            timeoutSeconds: 2
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: false
            - mountPath: /dev/shm
              name: devshm
              readOnly: false
            - mountPath: /shared
              name: shared
              readOnly: false
            - mountPath: /tmp
              name: tmp
              readOnly: false
            - mountPath: /downloads
              name: torrentblackhole
              readOnly: false
              subPath: torrent-blackhole
            - mountPath: /var/logs
              name: varlogs
              readOnly: false
            - mountPath: /var/run
              name: varrun
              readOnly: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      hostUsers: true
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      serviceAccountName: default
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 60
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: jackett
              app.kubernetes.io/name: jackett
              pod.name: main
          maxSkew: 1
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          topologyKey: truecharts.org/rack
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: jackett
              app.kubernetes.io/name: jackett
              pod.name: main
          maxSkew: 1
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jackett-config
        - emptyDir:
            medium: Memory
            sizeLimit: 500Mi
          name: devshm
        - emptyDir: {}
          name: shared
        - emptyDir:
            medium: Memory
            sizeLimit: 500Mi
          name: tmp
        - name: torrentblackhole
          persistentVolumeClaim:
            claimName: media-downloads
        - emptyDir:
            medium: Memory
            sizeLimit: 500Mi
          name: varlogs
        - emptyDir:
            medium: Memory
            sizeLimit: 500Mi
          name: varrun
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: prod-infra-chain-basic@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: "true"
  labels:
    app: jackett-18.1.6
    app.kubernetes.io/instance: jackett
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jackett
    app.kubernetes.io/version: 0.21.1155
    helm-revision: "1"
    helm.sh/chart: jackett-18.1.6
    release: jackett
  name: jackett
  namespace: prod-media
spec:
  rules:
    - host: jackett.st0rmingbr4in.com
      http:
        paths:
          - backend:
              service:
                name: jackett
                port:
                  number: 9117
            path: /
            pathType: Prefix
