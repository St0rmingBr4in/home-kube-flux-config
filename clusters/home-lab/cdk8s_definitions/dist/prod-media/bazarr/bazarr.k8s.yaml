apiVersion: v1
kind: Service
metadata:
  labels:
    app: bazarr-20.0.9
    app.kubernetes.io/instance: bazarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bazarr
    app.kubernetes.io/version: 1.4.2
    helm-revision: "1"
    helm.sh/chart: bazarr-20.0.9
    release: bazarr
    service.name: main
  name: bazarr
  namespace: prod-media
spec:
  ports:
    - name: main
      port: 6767
      protocol: TCP
      targetPort: 6767
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/instance: bazarr
    app.kubernetes.io/name: bazarr
    pod.name: main
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bazarr-20.0.9
    app.kubernetes.io/instance: bazarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bazarr
    app.kubernetes.io/version: 1.4.2
    helm-revision: "1"
    helm.sh/chart: bazarr-20.0.9
    release: bazarr
    service.name: metrics
  name: bazarr-metrics
  namespace: prod-media
spec:
  ports:
    - name: metrics
      port: 7879
      protocol: TCP
      targetPort: 7879
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/instance: bazarr
    app.kubernetes.io/name: bazarr
    pod.name: exportarr
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bazarr-20.0.9
    app.kubernetes.io/instance: bazarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bazarr
    app.kubernetes.io/version: 1.4.2
    helm-revision: "1"
    helm.sh/chart: bazarr-20.0.9
    release: bazarr
  name: bazarr
  namespace: prod-media
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: bazarr
      app.kubernetes.io/name: bazarr
      pod.name: main
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/cnpg: ffd338b55cc50a8b366097eec597eeb134dee46563555614453e28233d208d00
        checksum/configmaps: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/mariadb: 09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52
        checksum/mongodb: 09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52
        checksum/persistence: 7f897847145a5ceef3f8258366049a7654c79d4f884e8007a5643480cb932e77
        checksum/redis: 013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/services: 7d774e5b391bdf894f7b42a519c4464847d9009711a45b141b164951cc43b748
        checksum/solr: 29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347
      labels:
        app: bazarr-20.0.9
        app.kubernetes.io/instance: bazarr
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: bazarr
        app.kubernetes.io/version: 1.4.2
        helm-revision: "1"
        helm.sh/chart: bazarr-20.0.9
        pod.lifecycle: permanent
        pod.name: main
        release: bazarr
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: UTC
            - name: UMASK
              value: "0022"
            - name: UMASK_SET
              value: "0022"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: S6_READ_ONLY_ROOT
              value: "1"
          image: ghcr.io/onedr0p/bazarr:1.5.1@sha256:1c88830f3c51fc2f1230ad7040bcbe30f197449ae93f835448cf516d8b7e5e82
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 6767
              scheme: HTTP
            initialDelaySeconds: 12
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: bazarr
          ports:
            - containerPort: 6767
              name: main
              protocol: TCP
          readinessProbe:
            failureThreshold: 4
            httpGet:
              path: /
              port: 6767
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 12
            successThreshold: 2
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 250Mi
            requests:
              cpu: 1000m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add: []
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 568
            runAsNonRoot: true
            runAsUser: 568
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /
              port: 6767
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: false
            - mountPath: /dev/shm
              name: devshm
              readOnly: false
            - mountPath: /tv
              name: media
              readOnly: false
            - mountPath: /shared
              name: shared
              readOnly: false
            - mountPath: /tmp
              name: tmp
              readOnly: false
            - mountPath: /var/logs
              name: varlogs
              readOnly: false
            - mountPath: /var/run
              name: varrun
              readOnly: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      hostUsers: true
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      serviceAccountName: default
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 60
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: bazarr
              app.kubernetes.io/name: bazarr
              pod.name: main
          maxSkew: 1
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: bazarr-config
        - emptyDir:
            medium: Memory
            sizeLimit: 200Mi
          name: devshm
        - name: media
          persistentVolumeClaim:
            claimName: media-library
        - emptyDir: {}
          name: shared
        - emptyDir:
            medium: Memory
            sizeLimit: 200Mi
          name: tmp
        - emptyDir:
            medium: Memory
            sizeLimit: 200Mi
          name: varlogs
        - emptyDir:
            medium: Memory
            sizeLimit: 200Mi
          name: varrun
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    checksum/services: 7d774e5b391bdf894f7b42a519c4464847d9009711a45b141b164951cc43b748
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: prod-infra-basic-auth@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: "true"
  labels:
    app: bazarr-20.0.9
    app.kubernetes.io/instance: bazarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bazarr
    app.kubernetes.io/version: 1.4.2
    helm-revision: "1"
    helm.sh/chart: bazarr-20.0.9
    release: bazarr
  name: bazarr
  namespace: prod-media
spec:
  rules:
    - host: bazarr.st0rmingbr4in.com
      http:
        paths:
          - backend:
              service:
                name: bazarr
                port:
                  number: 6767
            path: /
            pathType: Prefix
