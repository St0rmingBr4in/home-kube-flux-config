apiVersion: v1
kind: Service
metadata:
  labels:
    app: radarr-17.0.8
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 5.0.3.8127
    helm-revision: "1"
    helm.sh/chart: radarr-17.0.8
    release: radarr
    service.name: main
  name: radarr
  namespace: prod-media
spec:
  ports:
    - name: main
      port: 7878
      protocol: TCP
      targetPort: 7878
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/name: radarr
    pod.name: main
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: radarr-17.0.8
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 5.0.3.8127
    helm-revision: "1"
    helm.sh/chart: radarr-17.0.8
    release: radarr
    service.name: metrics
  name: radarr-metrics
  namespace: prod-media
spec:
  ports:
    - name: metrics
      port: 7879
      protocol: TCP
      targetPort: 7879
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/name: radarr
    pod.name: exportarr
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: radarr-17.0.8
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 5.0.3.8127
    helm-revision: "1"
    helm.sh/chart: radarr-17.0.8
    release: radarr
  name: radarr-exportarr
  namespace: prod-media
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: radarr
      app.kubernetes.io/name: radarr
      pod.name: exportarr
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      labels:
        app: radarr-17.0.8
        app.kubernetes.io/instance: radarr
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: radarr
        app.kubernetes.io/version: 5.0.3.8127
        helm-revision: "1"
        helm.sh/chart: radarr-17.0.8
        pod.name: exportarr
        release: radarr
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - radarr
          env:
            - name: TZ
              value: UTC
            - name: UMASK
              value: "0022"
            - name: UMASK_SET
              value: "0022"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: CONFIG
              value: /config/config.xml
            - name: INTERFACE
              value: 0.0.0.0
            - name: PORT
              value: "7879"
            - name: URL
              value: http://radarr:7878
          image: tccr.io/truecharts/exportarr:v1.5.5@sha256:0dbba4994ac9926e284b5a24fe38e7ca546bcda4b20bbd1ab2444b8bc190d6cb
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 7879
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: radarr
          ports:
            - containerPort: 7879
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 7879
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 2
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add: []
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 568
            runAsNonRoot: true
            runAsUser: 568
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /healthz
              port: 7879
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: true
            - mountPath: /dev/shm
              name: devshm
              readOnly: false
            - mountPath: /shared
              name: shared
              readOnly: false
            - mountPath: /tmp
              name: tmp
              readOnly: false
            - mountPath: /var/logs
              name: varlogs
              readOnly: false
            - mountPath: /var/run
              name: varrun
              readOnly: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostNetwork: false
      hostPID: false
      restartPolicy: Always
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      serviceAccountName: default
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: radarr-config
        - emptyDir:
            medium: Memory
          name: devshm
        - emptyDir: {}
          name: shared
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: varlogs
        - emptyDir:
            medium: Memory
          name: varrun
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: radarr-17.0.8
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 5.0.3.8127
    helm-revision: "1"
    helm.sh/chart: radarr-17.0.8
    release: radarr
  name: radarr
  namespace: prod-media
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: radarr
      app.kubernetes.io/name: radarr
      pod.name: main
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        app: radarr-17.0.8
        app.kubernetes.io/instance: radarr
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: radarr
        app.kubernetes.io/version: 5.0.3.8127
        helm-revision: "1"
        helm.sh/chart: radarr-17.0.8
        pod.name: main
        release: radarr
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: TZ
              value: UTC
            - name: UMASK
              value: "0022"
            - name: UMASK_SET
              value: "0022"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: RADARR__PORT
              value: "7878"
          image: tccr.io/truecharts/radarr:v5.0.3.8127@sha256:5a29f9be14aeefadda77ed69a45ff087e1f5227a125a78fd7f1b15291bd01918
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /ping
              port: 7878
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: radarr
          ports:
            - containerPort: 7878
              name: main
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ping
              port: 7878
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 2
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add: []
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 568
            runAsNonRoot: true
            runAsUser: 568
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /ping
              port: 7878
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: false
            - mountPath: /dev/shm
              name: devshm
              readOnly: false
            - mountPath: /downloads
              name: downloads
              readOnly: false
            - mountPath: /movies
              name: media
              readOnly: false
              subPath: Movies
            - mountPath: /shared
              name: shared
              readOnly: false
            - mountPath: /tmp
              name: tmp
              readOnly: false
            - mountPath: /var/logs
              name: varlogs
              readOnly: false
            - mountPath: /var/run
              name: varrun
              readOnly: false
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostNetwork: false
      hostPID: false
      restartPolicy: Always
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      serviceAccountName: default
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: radarr-config
        - emptyDir:
            medium: Memory
          name: devshm
        - name: downloads
          persistentVolumeClaim:
            claimName: media-downloads
        - name: media
          persistentVolumeClaim:
            claimName: media-library
        - emptyDir: {}
          name: shared
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: varlogs
        - emptyDir:
            medium: Memory
          name: varrun
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: ""
  labels:
    app: radarr-17.0.8
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 5.0.3.8127
    helm-revision: "1"
    helm.sh/chart: radarr-17.0.8
    release: radarr
  name: radarr
  namespace: prod-media
spec:
  rules:
    - host: radarr.st0rmingbr4in.com
      http:
        paths:
          - backend:
              service:
                name: radarr
                port:
                  number: 7878
            path: /
            pathType: Prefix
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: radarr-17.0.8
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 5.0.3.8127
    helm-revision: "1"
    helm.sh/chart: radarr-17.0.8
    release: radarr
  name: radarr
  namespace: prod-media
spec:
  endpoints:
    - path: /metrics
      port: metrics
  jobLabel: app.kubernetes.io/name
  selector:
    matchLabels:
      app.kubernetes.io/instance: radarr
      app.kubernetes.io/name: radarr
      service.name: main
